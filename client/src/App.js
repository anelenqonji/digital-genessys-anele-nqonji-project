import React, { useEffect, useState } from 'react';\n\nexport default function App() {\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetchPosts = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch('/posts');\n      const data = await res.json();\n      setPosts(data);\n    } catch (err) {\n      setError('Failed to load posts');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    if (!title || !body) {\n      setError('Title and body required');\n      return;\n    }\n    try {\n      const res = await fetch('/posts', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title, body })\n      });\n      if (!res.ok) {\n        const err = await res.json();\n        setError(err.error || 'Failed to create post');\n        return;\n      }\n      const newPost = await res.json();\n      setPosts((p) => [...p, newPost]);\n      setTitle('');\n      setBody('');\n    } catch (err) {\n      setError('Failed to create post');\n    }\n  };\n\n  return (\n    <div style={{ padding: 20, fontFamily: 'Arial, sans-serif' }}>\n      <h1>Blog Client</h1>\n      <section style={{ marginBottom: 20 }}>\n        <h2>Create Post</h2>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <input value={title} onChange={(e) => setTitle(e.target.value)} placeholder="Title" style={{ width: '100%', padding: 8, marginBottom: 8 }} />\n          </div>\n          <div>\n            <textarea value={body} onChange={(e) => setBody(e.target.value)} placeholder="Body" rows={4} style={{ width: '100%', padding: 8, marginBottom: 8 }} />\n          </div>\n          <button type="submit">Create</button>\n        </form>\n        {error && <div style={{ color: 'red', marginTop: 8 }}>{error}</div>}\n      </section>\n\n      <section>\n        <h2>Posts</h2>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <ul>\n            {posts.map((p) => (\n              <li key={p.id} style={{ marginBottom: 12 }}>\n                <strong>{p.title}</strong>\n                <p>{p.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n    </div>\n  );\n}